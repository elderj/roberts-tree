{"version":3,"sources":["images/tree.png","images/linkLogoImages/instagram-logo.png","images/sc.png","components/Header.js","components/NavBar.js","components/Footer.js","components/Home.js","components/About.js","components/Portfolio.js","components/Contact.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","React","createElement","Fragment","className","alt","src","tree","NavBar","Link","to","currentYear","Date","getFullYear","Footer","href","instagramLogo","toString","Home","About","palmetto","Portfolio","Contact","App","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","HashRouter","basename","process","document","getElementById","URL","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.566aed88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tree.94b6703c.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram-logo.f6697773.png\";","module.exports = __webpack_public_path__ + \"static/media/sc.5ddd0d04.png\";","import React, { Fragment } from \"react\";\nimport \"../styles/App.css\";\nimport \"../styles/font.css\";\n\nimport tree from \"../images/tree.png\";\n\nconst Header = () => (\n  <Fragment>\n    <div className=\"header\">\n      <img className=\"headerImageLogo\" alt=\"Tree Logo\" src={tree} />\n      <h1 className=\"pacifico-text headerTitleText\">\n        Roberts Stumpgrinding and Tree Service\n      </h1>\n    </div>\n  </Fragment>\n);\n\nexport default Header;\n","import React, { Fragment } from \"react\";\nimport \"../styles/App.css\";\nimport \"../styles/font.css\";\n\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => (\n  <Fragment>\n    <p>\n      <Link to=\"/\">Home</Link>\n      {\" | \"}\n      <Link to=\"/about\">About</Link>\n      {\" | \"}\n      <Link to=\"/portfolio\">Portfolio</Link>\n      {\" | \"}\n      <Link to=\"/contact\">Contact</Link>\n    </p>\n  </Fragment>\n);\n\nexport default NavBar;\n","import React, { Fragment } from \"react\";\nimport \"../styles/App.css\";\nimport \"../styles/font.css\";\n\nimport instagramLogo from \"../images/linkLogoImages/instagram-logo.png\";\n// import twitterLogo from \"../images/linkLogoImages/twit.png\";\n\nconst currentYear = new Date().getFullYear();\n\nconst Footer = () => (\n  <Fragment>\n    {/* <a href=\"https://twitter.com/ElderDesignCo\">\n      <img className=\"linkLogoImage\" alt=\"Twitter logo\" src={twitterLogo} />\n    </a> */}\n    <a href=\"https://www.instagram.com/elderdesignconcepts/\">\n      <img className=\"linkLogoImage\" alt=\"Instagram Logo\" src={instagramLogo} />\n    </a>\n\n    <br />\n    <h6 className=\"quicksand-text\">\n      Â©{currentYear.toString()} Roberts Stumpgrinding and Tree Service\n    </h6>\n  </Fragment>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport \"../styles/font.css\";\n\n// import { Link } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NavBar from \"./NavBar\";\nimport Footer from \"./Footer\";\n\nconst Home = () => (\n  <div className=\"floating-content\">\n    <Header />\n    <NavBar />\n    <h3 className=\"quicksand-text blurb\">\n      <br />\n      Roberts Tree services etc.\n      <br />\n      <br />\n    </h3>\n\n    <p className=\"quicksand-text blurb\">\n      {/* TODO: Figure out what to say here */}\n      Servicing Charleston since XXXX\n      <br />\n      <br />\n    </p>\n    <br />\n    <br />\n    <Footer />\n    <br />\n    <br />\n  </div>\n);\n\nexport default Home;\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport \"../styles/font.css\";\n\nimport Header from \"./Header\";\nimport NavBar from \"./NavBar\";\nimport Footer from \"./Footer\";\n\nimport palmetto from \"../images/sc.png\";\n\nconst About = () => (\n  <div className=\"floating-content\">\n    <Header />\n    <NavBar />\n    <h4 className=\"quicksand-text\">A little more about E.D.C.</h4>\n    <p className=\"quicksand-text blurb\">\n      We are passionate about making really cool things, both digitally and in\n      the real world.\n      <br />\n      <br />\n      Currently based out of Charleston, South Carolina{\" \"}\n      <img className=\"linkLogoImage\" alt=\"South Carolina\" src={palmetto} />\n      <br />\n      {/* <br />I have a ton of hobbies outside of my profession including:\n      <h5>Cars & Motorcycles</h5>\n      <h5>Bicycles</h5>\n      <h5>Running & Lifting</h5>\n      <h5>Beer & Brewing</h5>\n      <h5>DIY</h5>\n      <h5>Music</h5>\n      <br /> */}\n    </p>\n\n    <Footer />\n    <br />\n    <br />\n  </div>\n);\n\nexport default About;\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport \"../styles/list.css\";\nimport \"../styles/font.css\";\n\nimport Header from \"./Header\";\nimport NavBar from \"./NavBar\";\nimport Footer from \"./Footer\";\n\nconst Portfolio = () => (\n  <div className=\"floating-content\">\n    <Header />\n    <NavBar />\n    <h4 className=\"quicksand-text\">Before and After</h4>\n    <div className=\"niceLookingList\"></div>\n\n    <br />\n    <br />\n    <br />\n    <Footer />\n    <br />\n    <br />\n  </div>\n);\n\nexport default Portfolio;\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport \"../styles/font.css\";\n\nimport Header from \"./Header\";\nimport NavBar from \"./NavBar\";\nimport Footer from \"./Footer\";\n\nconst Contact = () => (\n  <div className=\"floating-content\">\n    <Header />\n    <NavBar />\n    <p className=\"quicksand-text blurb\">\n      <h4>Get In Touch!</h4>\n      <br />\n      <p>Office: 406-499-2211</p>\n      <p>Cell: 406-210-4033</p>\n      <br />\n      <br />\n      <h5>ElderDesignConcepts@gmail.com</h5>\n      <br />\n      Follow me on Instagram{\" \"}\n      <a href=\"https://www.instagram.com/elderdesignconcepts/\">\n        @ElderDesignConcepts\n      </a>{\" \"}\n      to check out some more designs and interests.\n    </p>\n\n    <br />\n    <Footer />\n  </div>\n);\n\nexport default Contact;\n","import React from \"react\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Portfolio from \"./Portfolio\";\nimport Contact from \"./Contact\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/portfolio\" component={Portfolio} />\n        {/* <Route exact path=\"/portfolio/kings-card-game\" component={KingsGame} />\n        <Route\n          exact\n          path=\"/portfolio/kings-card-game/terms\"\n          component={KingsGameTOS}\n        />\n        <Route\n          exact\n          path=\"/portfolio/kings-card-game/privacy\"\n          component={KingsGamePP}\n        /> */}\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/contact\" component={Contact} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n// serviceWorker.unregister();\n"],"sourceRoot":""}